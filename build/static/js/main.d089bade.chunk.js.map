{"version":3,"sources":["dataContext.js","Components/Form.js","Components/Datatable/Headertable.js","Components/Modalpopup.js","Components/Datatable/Datatable.js","Redux/action-type.js","api/brew.js","Redux/brewActions.js","Components/Navbar.js","App.js","reportWebVitals.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["dataContext","createContext","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Form","props","datas","fetch","value","arrayUniqueByKey","Map","map","item","values","useContext","setQuery","query","classes","FormControl","variant","className","InputLabel","id","Select","labelId","onChange","event","state","target","city","name","label","data","MenuItem","title","color","fontWeight","HeaderTable","valuetoorderby","orderdirection","handleRequestsort","createSortHandler","property","TableHead","style","backgroundColor","TableRow","TableCell","TableSortLabel","active","direction","onClick","align","modal","display","alignItems","justifyContent","border","paper","boxShadow","shadows","padding","Modalpopup","prop","open","handleClose","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","address_2","address_3","street","country","postal_code","brewery_type","created_at","phone","descendingComparator","a","b","orderBy","sortedRowinformation","rowArray","comparator","stabilizationRowArray","el","index","sort","order","Datatable","useState","setOrderdirection","setValuetoorderby","setData","setOpen","TableContainer","Table","isAscending","row","handleOpen","component","scope","ActionTypes","ALL_BREW","STATE","CITY","NAME","axios","create","baseURL","srtBrew","dispatch","allBrewapi","get","response","type","payload","srtState","getState","srtCity","srtName","root","flexGrow","bg","img","DenseAppBar","AppBar","position","Toolbar","Typography","src","App","loading","setloading","fetchData","useSelector","useDispatch","useEffect","gutterBottom","Provider","allState","allCity","allName","LinearProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","intialState","allBrew","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d089bade.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const dataContext = createContext(null)","import React, { useContext } from \"react\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { dataContext } from '../dataContext'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction Form(props) {\r\n  const {datas, fetch, value} = props\r\n  //unique the value to show in dropdown\r\n    const arrayUniqueByKey = [...new Map(datas.map(item =>\r\n      [item[fetch], item])).values()];\r\n  \r\n    const {query, setQuery} = useContext(dataContext)\r\n    const classes = useStyles(); \r\n    //update query in order as state-city-name\r\n    const handleChange = (event) => {\r\n      switch(fetch){\r\n        case 'state':\r\n          return setQuery(setQuery => ({...setQuery,state:event.target.value,city:'',name:''}));\r\n        case 'city':\r\n          return setQuery(setQuery => ({...setQuery,city:event.target.value,name:''}));\r\n        case 'name':\r\n          return setQuery(setQuery => ({...setQuery,name:event.target.value}));\r\n        default:\r\n          return null\r\n      } };\r\n    \r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl} >\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">{fetch}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value= {value}\r\n          onChange={handleChange}\r\n          label={fetch}\r\n        >\r\n          \r\n          \r\n          {arrayUniqueByKey.map((data) =>\r\n            <MenuItem value={data[fetch]} key={data.id}>\r\n              {data[fetch]}\r\n            </MenuItem>\r\n          )}\r\n         \r\n        </Select>        \r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    title:{\r\n      color:'white',\r\n      fontWeight: 'bold'\r\n    }\r\n  \r\n  });\r\nexport default function HeaderTable(props){\r\n    const {valuetoorderby , orderdirection, handleRequestsort} = props\r\n    const classes = useStyles();\r\n    const createSortHandler = (property) => (event) => {\r\n        //sending back the property name\r\n        handleRequestsort(event, property)       \r\n    }\r\n    return(\r\n        <TableHead style={{backgroundColor: 'rgb(255, 162, 0)'}}>\r\n          <TableRow >\r\n            <TableCell key='name'>\r\n                <TableSortLabel className={classes.title}\r\n                    active={valuetoorderby === 'name'}\r\n                    direction={valuetoorderby === 'name' ? orderdirection: 'asc'}\r\n                    onClick={createSortHandler('name')}\r\n                >Name</TableSortLabel>\r\n            </TableCell>\r\n            <TableCell  align=\"left\">\r\n                <TableSortLabel className={classes.title}\r\n                    active={valuetoorderby === 'brewery_type'}\r\n                    direction={valuetoorderby === 'brewery_type' ? orderdirection: 'asc'}\r\n                    onClick={createSortHandler('brewery_type')}\r\n                >Brewery Type</TableSortLabel>\r\n            </TableCell>\r\n            <TableCell  align=\"left\">\r\n                <TableSortLabel className={classes.title}\r\n                    active={valuetoorderby === 'city'}\r\n                    direction={valuetoorderby === 'city' ? orderdirection: 'asc'}\r\n                    onClick={createSortHandler('city')}\r\n                >Address</TableSortLabel>\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n                <TableSortLabel className={classes.title}\r\n                    active={valuetoorderby === 'phone'}\r\n                    direction={valuetoorderby === 'phone' ? orderdirection: 'asc'}\r\n                    onClick={createSortHandler('phone')}\r\n                >Phone</TableSortLabel>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    border: '2px solid rgb(255,188,0)',\r\n  },\r\n  paper: {\r\n    backgroundColor: 'white',\r\n    border: '2px solid rgb(255,188,0)',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function Modalpopup(prop) {\r\n    const {open, handleClose,data} = prop\r\n    const handleCloseRequest = (property) => (event) => {\r\n        //sending back the property name\r\n        handleClose(event, property)       \r\n    }\r\n   const classes = useStyles();\r\n \r\n    return (\r\n        <>\r\n        <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleCloseRequest('close')}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={open} > \r\n                {/* in={open}> */}\r\n              <div className={classes.paper}>\r\n                <h2 id=\"transition-modal-title\" style={{color: 'rgb(255,188,0)'}}>Name: {data.name}</h2>\r\n                <p id=\"transition-modal-description\">Address: {data.address_2}{` `}{data.address_3}{` `}{data.street}{` `}{data.city}\r\n                {` `}{data.state}{` `}{data.country}{` `}{data.postal_code}</p>\r\n                <p id=\"transition-modal-description\">Brewery Type: {data.brewery_type}</p>\r\n                <p id=\"transition-modal-description\">Created At: {data.created_at}</p>\r\n                <p id=\"transition-modal-description\">Phone: {data.phone}</p>\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport HeaderTable from './Headertable';\r\nimport Modalpopup from '../Modalpopup'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  //compare orderBy\r\n  //asc\r\n  if(b[orderBy] < a[orderBy]){\r\n    return -1\r\n  }\r\n  //desc\r\n  if(b[orderBy] > a[orderBy]){\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n//return function\r\nfunction getComparator(order, orderBy){\r\n  return order === 'desc'\r\n  ? (a, b) => descendingComparator(a, b, orderBy)\r\n  : (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\nconst sortedRowinformation = (rowArray, comparator) =>{\r\n   // temporary array holds objects with position and sort-value\r\n  const stabilizationRowArray = rowArray.map((el, index) => [el, index])\r\n  // sorting the mapped array containing the reduced values\r\n  stabilizationRowArray.sort((a,b) => {\r\n    //passing items to compare descendingComparator(a, b, orderBy)\r\n    const order = comparator(a[0], b[0])\r\n    if(order !== 0) \r\n      return order\r\n    //sort() expects a value to be returned at the end of arrow function.\r\n    return a[1] - b[1]\r\n  })\r\n  return stabilizationRowArray.map((el) => el[0])\r\n}\r\n\r\nexport default function Datatable({props}) {\r\n  const [orderdirection, setOrderdirection] = useState('asc')\r\n  const [valuetoorderby, setValuetoorderby] = useState('name')\r\n  const [data, setData] = useState([])\r\n  const [open, setOpen] = useState(false);\r\n\r\n  //data modal popup\r\n  const handleOpen = (row) => {\r\n    setData(row)\r\n    setOpen(true);\r\n  };\r\n  const handleClose = (event, property) => {    \r\n    (property === 'close' ? setOpen(false) : setOpen(true))\r\n  };\r\n  const handleRequestsort = (event, property) => {\r\n    const isAscending = (valuetoorderby === property && orderdirection === 'asc')\r\n    setValuetoorderby(property)\r\n    setOrderdirection(isAscending ? 'desc' : 'asc')\r\n  }\r\n  return (\r\n    <>\r\n    <TableContainer>\r\n      <Table>\r\n        <HeaderTable \r\n        valuetoorderby={valuetoorderby}\r\n        orderdirection={orderdirection}\r\n        handleRequestsort={handleRequestsort}\r\n        />\r\n        {\r\n          sortedRowinformation(props, getComparator(orderdirection, valuetoorderby))\r\n          .map((row, index) => (\r\n            <TableRow key={index} onClick={() => handleOpen(row)}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{row.brewery_type}</TableCell>\r\n              {/* will be sorted by city name */}\r\n              <TableCell align=\"left\">{row.address_2}{` `}{row.address_3}{` `}{row.street}{` `}{row.city}\r\n              {` `}{row.state}{` `}{row.country}{` `}{row.postal_code}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{row.phone}</TableCell>\r\n            </TableRow>\r\n            \r\n          ))\r\n        }\r\n        <Modalpopup open = {open} handleClose={handleClose} data={data}/>\r\n      </Table>\r\n    </TableContainer>\r\n    </>\r\n  );\r\n}","export const ActionTypes = {\r\n    ALL_BREW: \"FETCH\",\r\n    STATE: \"STATE\",\r\n    CITY: \"CITY\",\r\n    NAME: \"NAME\",\r\n  };","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.openbrewerydb.org/breweries'\r\n})","import { ActionTypes } from './action-type'\r\nimport allBrewapi from '../api/brew'\r\n\r\n//using middleware to help to synchronous  api  in the action\r\n//each function return the data from searching\r\nexport const srtBrew = () => async (dispatch) => {\r\n    const response = await allBrewapi.get()\r\n    dispatch({type:ActionTypes.ALL_BREW, payload:response.data})\r\n}\r\nexport const srtState =(query) => {\r\n    return async function (dispatch, getState){\r\n        const response = await allBrewapi.get(query)\r\n        dispatch({type:ActionTypes.STATE, payload:response.data})\r\n    }\r\n}\r\n\r\nexport const srtCity =(query) => {\r\n     return async function (dispatch, getState){\r\n        const response = await allBrewapi.get(query)\r\n        dispatch({type:ActionTypes.CITY, payload:response.data})\r\n    }\r\n}\r\n\r\nexport const srtName =(query) => {\r\n    return async function (dispatch, getState){\r\n        const response = await allBrewapi.get(query)\r\n        dispatch({type:ActionTypes.NAME, payload:response.data})\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \r\n  },\r\n  bg: {\r\n    backgroundColor: 'rgb(255,188,0)'\r\n  },\r\n  img: {\r\n    margin: '20px'\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.bg}>\r\n        <Toolbar >\r\n          \r\n          <Typography variant=\"h6\" style={{display: \"contents\"}}>\r\n            <img src='https://www.openbrewerydb.org/favicon.ico' className={classes.img} /> List Breweries\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import './App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Form from './Components/Form'\r\nimport Datatable from './Components/Datatable/Datatable'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { dataContext } from './dataContext'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { srtBrew, srtName, srtState,srtCity } from './Redux/brewActions'\r\nimport Navbar from './Components/Navbar'\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState({name:'',city:'',state:''})\r\n  const [loading,setloading] = useState(false)\r\n  const fetchData = useSelector((state) => state)\r\n  const dispatch = useDispatch();\r\n  \r\n  //fetching all the data at first\r\n  useEffect(() => {\r\n    setloading(true)\r\n    dispatch(srtBrew())\r\n    setloading(false);\r\n  }, [dispatch]);\r\n  \r\n  //fetch data depends on searching\r\n  useEffect(() => {\r\n    setloading(true)\r\n    if(query.state){\r\n      dispatch(srtState(`?by_state=${query.state}`))\r\n    }\r\n    if(query.city !== ''){\r\n      dispatch(srtCity(`?by_state=${query.state}&by_city=${query.city}`))\r\n    }\r\n    if(query.name !== ''){\r\n      dispatch(srtName(`?by_state=${query.state}&by_city=${query.city}&by_name=${query.name}`))\r\n    }\r\n    setloading(false);\r\n  }, [dispatch, query]);\r\n  \r\n  return (\r\n    <div className='appbody'>\r\n    <Navbar />\r\n    <div className=\"App\">      \r\n      <header className=\"App-header\">\r\n      <Typography variant=\"h3\" gutterBottom style={{color:'#fb0'}}>\r\n        Welcome to Open Brewery DB\r\n      </Typography>\r\n        <div>\r\n        {/* passing the data to display dropdown */}\r\n        <dataContext.Provider value={{ query, setQuery }}>        \r\n          {/* {query && <Form datas={fetchData.allBrew} fetch={'country'} />} */}\r\n          {query && <Form datas={fetchData.allState} fetch={'state'} value={query.state} />}\r\n          {query && <Form datas={fetchData.allCity} fetch={'city'} value={query.city} />}\r\n          {query && <Form datas={fetchData.allName} fetch={'name'} value={query.name} />}\r\n        </dataContext.Provider>\r\n        </div>\r\n      </header>\r\n      {/* display datatable */}\r\n      { (loading) ?  <LinearProgress /> : <Datatable props={fetchData.allName} /> }\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionTypes } from './action-type'\r\nconst intialState = {\r\n    allBrew: [],\r\n    allState: [],\r\n    allCity: [],\r\n    allName: [],\r\n  };\r\n \r\nexport const allBrewreducer = (state = intialState ,  { type, payload }) => {\r\n    switch(type){\r\n        //update all data\r\n        case ActionTypes.ALL_BREW:{\r\n          return {...state,allBrew: payload,allState:payload, allCity: payload, allName: payload}\r\n        }\r\n        //update city and name depends on state searched\r\n        case ActionTypes.STATE:{\r\n            return {...state,allCity: payload,allName: payload}           \r\n        }\r\n        //update name depends on city searched\r\n        case ActionTypes.CITY:{\r\n            return {...state,allName: payload}\r\n        }\r\n        //update name depends on name searched\r\n        case ActionTypes.NAME:{\r\n            return {...state,allName: payload}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { allBrewreducer } from './reducer'\r\nimport thunk from 'redux-thunk'\r\n\r\n//enable Redux Thunk, use applyMiddleware():\r\nexport const store = createStore(allBrewreducer, applyMiddleware(thunk));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\"\r\nimport {store} from './Redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}