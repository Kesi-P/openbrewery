[{"C:\\Users\\kesip\\openbrewery\\pages\\api\\hello.ts":"1","C:\\Users\\kesip\\openbrewery\\pages\\index.tsx":"2","C:\\Users\\kesip\\openbrewery\\pages\\login.tsx":"3","C:\\Users\\kesip\\openbrewery\\pages\\_app.tsx":"4","C:\\Users\\kesip\\openbrewery\\pages\\_document.tsx":"5","C:\\Users\\kesip\\openbrewery\\src\\api\\brew.js":"6","C:\\Users\\kesip\\openbrewery\\src\\App.test.js":"7","C:\\Users\\kesip\\openbrewery\\src\\Components\\Datatable\\Datatable.js":"8","C:\\Users\\kesip\\openbrewery\\src\\Components\\Datatable\\Headertable.js":"9","C:\\Users\\kesip\\openbrewery\\src\\Components\\Form.js":"10","C:\\Users\\kesip\\openbrewery\\src\\Components\\Home.js":"11","C:\\Users\\kesip\\openbrewery\\src\\Components\\Modalpopup.js":"12","C:\\Users\\kesip\\openbrewery\\src\\Components\\Navbar.js":"13","C:\\Users\\kesip\\openbrewery\\src\\dataContext.js":"14","C:\\Users\\kesip\\openbrewery\\src\\Redux\\action-type.js":"15","C:\\Users\\kesip\\openbrewery\\src\\Redux\\brewActions.js":"16","C:\\Users\\kesip\\openbrewery\\src\\Redux\\reducer.js":"17","C:\\Users\\kesip\\openbrewery\\src\\Redux\\store.js":"18","C:\\Users\\kesip\\openbrewery\\src\\reportWebVitals.js":"19","C:\\Users\\kesip\\openbrewery\\src\\setupTests.js":"20","C:\\Users\\kesip\\openbrewery\\pages\\api\\login.ts":"21","C:\\Users\\kesip\\openbrewery\\pages\\api\\register.ts":"22","C:\\Users\\kesip\\openbrewery\\pages\\register.tsx":"23"},{"size":307,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":949,"mtime":1678368361599,"results":"26","hashOfConfig":"25"},{"size":4449,"mtime":1683893926572,"results":"27","hashOfConfig":"25"},{"size":429,"mtime":1677247611912,"results":"28","hashOfConfig":"25"},{"size":231,"mtime":499162500000,"results":"29","hashOfConfig":"25"},{"size":119,"mtime":1629282878796,"results":"30","hashOfConfig":"25"},{"size":380,"mtime":1677077894666,"results":"31","hashOfConfig":"25"},{"size":3169,"mtime":1629471625190,"results":"32","hashOfConfig":"25"},{"size":2356,"mtime":1629461020153,"results":"33","hashOfConfig":"25"},{"size":2018,"mtime":1677513540709,"results":"34","hashOfConfig":"25"},{"size":2312,"mtime":1683460195196,"results":"35","hashOfConfig":"25"},{"size":2126,"mtime":1683460147646,"results":"36","hashOfConfig":"25"},{"size":864,"mtime":1683460217320,"results":"37","hashOfConfig":"25"},{"size":88,"mtime":1629205763484,"results":"38","hashOfConfig":"25"},{"size":117,"mtime":1629286633578,"results":"39","hashOfConfig":"25"},{"size":1014,"mtime":1629460399322,"results":"40","hashOfConfig":"25"},{"size":933,"mtime":1629460601814,"results":"41","hashOfConfig":"25"},{"size":252,"mtime":1629460316586,"results":"42","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"25"},{"size":241,"mtime":499162500000,"results":"44","hashOfConfig":"25"},{"size":1981,"mtime":1683733887685,"results":"45","hashOfConfig":"25"},{"size":991,"mtime":1683734148733,"results":"46","hashOfConfig":"25"},{"size":6621,"mtime":1681642154841,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xybhsv",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},"C:\\Users\\kesip\\openbrewery\\pages\\api\\hello.ts",[],"C:\\Users\\kesip\\openbrewery\\pages\\index.tsx",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import Head from 'next/head'\nimport Image from 'next/image'\nimport { Inter } from '@next/font/google'\nimport styles from '../styles/Home.module.css'\nimport {Provider} from \"react-redux\"\nimport {store} from '../src/Redux/store'\nimport Form from '../src/Components/Form'\nimport Datatable from '../src/Components/Datatable/Datatable'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Typography from '@material-ui/core/Typography';\nimport { dataContext } from '../src/dataContext'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { srtBrew, srtName, srtState,srtCity } from '../src/Redux/brewActions'\nimport Navbar from '../src/Components/Navbar'\nimport React, { useState, useEffect } from \"react\";\nimport App  from './_app'\nimport Home from '../src/Components/Home'\n\n//const inter = Inter({ subsets: ['latin'] })\n\nexport default function Index() {\n\nreturn (\n  <Provider store={store}>\n    <Home />\n    </Provider>\n\n)\n}","C:\\Users\\kesip\\openbrewery\\pages\\login.tsx",["123"],"import React,{ useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\n//import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { useRouter } from 'next/router';\r\nimport { colors } from '@mui/material';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Login() {\r\n  const router = useRouter();\r\n  const [isValid, setIsValid] = useState(true);\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const getdata = new FormData(event.currentTarget);\r\n    const data = {\r\n      email: getdata.get('email'),\r\n      password: getdata.get('password'),\r\n    };\r\n\r\n    const JSONdata = JSON.stringify(data)\r\n    const endpoint = '/api/login'\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    \r\n    const options = {\r\n      // The method is POST because we are sending data.\r\n      method: 'POST',\r\n      // Tell the server we're sending JSON.\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      // Body of the request is the JSON data we created above.\r\n      body: JSONdata,\r\n    }\r\n\r\n    // Send the form data to our forms API on Vercel and get a response.\r\n    const response = await fetch(endpoint, options)\r\n\r\n    // Get the response data from server as JSON.\r\n    // If server returns the name submitted, that means the form works.\r\n    const result = await response.json()\r\n    alert(`Is this your full name: ${result.message}`)\r\n    if( `${result.message}` === `Login`){\r\n      console.log(localStorage.getItem('jwtToken'))\r\n      router.push('/');\r\n    }else{\r\n      setIsValid(false)\r\n    }\r\n        \r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box \r\n            component=\"form\" \r\n            onSubmit={handleSubmit} \r\n            noValidate \r\n            sx={{ mt: 1 }}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              variant=\"outlined\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n             \r\n          {!isValid ?   \r\n          <Typography  variant=\"caption\" display=\"block\" gutterBottom style={{color:\"red\"}}>\r\n           Email address or Password is invalid          \r\n          </Typography> :'fu'} \r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              color=\"primary\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","C:\\Users\\kesip\\openbrewery\\pages\\_app.tsx",["124","125","126"],"import '../styles/globals.css'\nimport type { AppProps } from 'next/app'\nimport { useRouter } from 'next/router'\nimport Login from './login'\nimport Link from 'next/link'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n  // const router = useRouter()\n  \n  // return (\n  // <>\n  // <h1>Path :- {router.asPath} </h1>\n  // <Link href=\"/login\">About Us</Link>\n  // </>\n  // )\n}\n","C:\\Users\\kesip\\openbrewery\\pages\\_document.tsx",[],"C:\\Users\\kesip\\openbrewery\\src\\api\\brew.js",[],"C:\\Users\\kesip\\openbrewery\\src\\App.test.js",["127"],"import { render, screen } from '@testing-library/react';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\"\r\nimport {store} from './Redux/store'\r\n\r\ntest('renders learn react link', () => {\r\n  render(<Provider store={store}>\r\n    <App />\r\n  </Provider>);\r\n  // const linkElement = screen.getByText(/learn react/i);\r\n  // expect(linkElement).toBeInTheDocument();\r\n});\r\n","C:\\Users\\kesip\\openbrewery\\src\\Components\\Datatable\\Datatable.js",[],"C:\\Users\\kesip\\openbrewery\\src\\Components\\Datatable\\Headertable.js",[],"C:\\Users\\kesip\\openbrewery\\src\\Components\\Form.js",["128"],"import React, { useContext } from \"react\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { dataContext } from '../dataContext'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction Form(props) {\r\n  const {datas, fetch, value} = props\r\n  //unique the value to show in dropdown\r\n    const arrayUniqueByKey = [...new Map(datas.map(item =>\r\n      [item[fetch], item])).values()];\r\n  \r\n    const {query, setQuery} = useContext(dataContext)\r\n    const classes = useStyles(); \r\n    //update query in order as state-city-name\r\n    const handleChange = (event) => {\r\n      switch(fetch){\r\n        case 'state':\r\n          return setQuery(setQuery => ({...setQuery,state:event.target.value,city:'',name:''}));\r\n        case 'city':\r\n          return setQuery(setQuery => ({...setQuery,city:event.target.value,name:''}));\r\n        case 'name':\r\n          return setQuery(setQuery => ({...setQuery,name:event.target.value}));\r\n        default:\r\n          return null\r\n      } };\r\n    \r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl} >\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">{fetch}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value= {value}\r\n          onChange={handleChange}\r\n          label={fetch}\r\n        >\r\n          \r\n          \r\n          {arrayUniqueByKey.map((data) =>\r\n            <MenuItem value={data[fetch]} key={data.id}>\r\n              {data[fetch]}\r\n            </MenuItem>\r\n          )}\r\n         \r\n        </Select>        \r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\kesip\\openbrewery\\src\\Components\\Home.js",[],"C:\\Users\\kesip\\openbrewery\\src\\Components\\Modalpopup.js",["129"],"import React from 'react'\r\nimport { styled } from '@mui/material/styles';\r\nimport Modal from '@mui/material/Modal';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Fade from '@mui/material/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    border: '2px solid rgb(255,188,0)',\r\n  },\r\n  paper: {\r\n    backgroundColor: 'white',\r\n    border: '2px solid rgb(255,188,0)',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    zIndex: 1\r\n  },\r\n}));\r\n\r\nexport default function Modalpopup(prop) {\r\n    const {open, handleClose,data} = prop\r\n    const handleCloseRequest = (property) => (event) => {\r\n        //sending back the property name\r\n        handleClose(event, property)       \r\n    }\r\n   const classes = useStyles();\r\n \r\n    return (\r\n        <>\r\n        <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleCloseRequest('close')}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={open} > \r\n                {/* in={open}> */}\r\n              <div className={classes.paper}>\r\n                <h2 id=\"transition-modal-title\" style={{color: 'rgb(255,188,0)'}}>Name: {data.name}</h2>\r\n                <p id=\"transition-modal-description\">Address: {data.address_2}{` `}{data.address_3}{` `}{data.street}{` `}{data.city}\r\n                {` `}{data.state}{` `}{data.country}{` `}{data.postal_code}</p>\r\n                <p id=\"transition-modal-description\">Brewery Type: {data.brewery_type}</p>\r\n                <p id=\"transition-modal-description\">Created At: {data.created_at}</p>\r\n                <p id=\"transition-modal-description\">Phone: {data.phone}</p>\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\kesip\\openbrewery\\src\\Components\\Navbar.js",["130","131"],"import React from 'react';\r\n//import { styled } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles/makeStyles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function DenseAppBar() {\r\n  return (\r\n    <div className='navroot'>\r\n      <AppBar position=\"static\" className='navbg'>\r\n        <Toolbar >\r\n          \r\n          <Typography variant=\"h6\" style={{display: \"contents\"}}>\r\n            <img src='https://www.openbrewerydb.org/favicon.png' className='nav img' /> List Breweries\r\n          </Typography>\r\n          <Button variant=\"outlined\" style={{marginLeft: \"auto\"}} href= '/login'>\r\n            Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","C:\\Users\\kesip\\openbrewery\\src\\dataContext.js",[],"C:\\Users\\kesip\\openbrewery\\src\\Redux\\action-type.js",[],"C:\\Users\\kesip\\openbrewery\\src\\Redux\\brewActions.js",[],"C:\\Users\\kesip\\openbrewery\\src\\Redux\\reducer.js",[],"C:\\Users\\kesip\\openbrewery\\src\\Redux\\store.js",[],"C:\\Users\\kesip\\openbrewery\\src\\reportWebVitals.js",[],"C:\\Users\\kesip\\openbrewery\\src\\setupTests.js",[],"C:\\Users\\kesip\\openbrewery\\pages\\api\\login.ts",["132","133"],"// Import required libraries\r\nimport { useState, useEffect } from 'react';\r\nimport jwt from 'jsonwebtoken'\r\nimport bcrypt from 'bcryptjs'\r\n\r\nconst User = require('../../models/users')\r\n\r\n// Create a secret key for JWT\r\nconst JWT_SECRET = 'mysecretkey'\r\n\r\n// Create a login API endpoint\r\nexport default async function handler(req, res) {\r\n  if (req.method === 'POST') {\r\n    const { email, password } = req.body\r\n    console.log(req.body)\r\n    const hashedPassword = bcrypt.hashSync(password);\r\n    const isMatch = bcrypt.compareSync(password, hashedPassword);\r\n    // TODO: Query your database to validate user credentials\r\n     const user = await User.findOne({ email }, { password:isMatch }).exec();\r\n\r\n    // Check if user exists and password is valid\r\n    if (!user || !isMatch) {\r\n      res.status(401).json({ message: 'Invalid' })\r\n      return\r\n    }\r\n\r\n    // Create a JWT token\r\n    const token = jwt.sign({ username:'kesip' }, JWT_SECRET, { expiresIn: '1d' })\r\n    \r\n    \r\n   // Set the token in a HttpOnly cookie and send response\r\n    res.setHeader('Set-Cookie', `token=${token}; HttpOnly; Secure; SameSite=Strict`)\r\n    \r\n    res.status(200).json({ message: 'Login' })\r\n  } else {\r\n    res.status(405).json({ message: 'Method not allowed' })\r\n  }\r\n}\r\n\r\n// Create a middleware function to check for JWT token\r\nexport const withAuth = (handler) => async (req, res) => {\r\n  // Check for token in cookie or local storage\r\n  const token = req.cookies.token || req.headers.authorization?.split(' ')[1]\r\n  \r\n  // Verify the token and extract user ID\r\n  try {\r\n    const decoded = jwt.verify(token, JWT_SECRET)\r\n    req.userId = decoded.userId\r\n    return handler(req, res)\r\n  } catch (err) {\r\n    res.status(401).json({ message: 'Unauthorized' })\r\n  }\r\n}\r\n\r\n// Example protected API endpoint\r\nexport const protectedEndpoint = withAuth(async (req, res) => {\r\n  // Only accessible with valid token\r\n  res.status(200).json({ message: 'Protected endpoint' })\r\n  return true\r\n})\r\n","C:\\Users\\kesip\\openbrewery\\pages\\api\\register.ts",["134"],"// Import required libraries\r\nimport jwt from 'jsonwebtoken'\r\nimport bcrypt from 'bcryptjs'\r\nconst User = require('../../models/users')\r\n\r\n\r\n// Create a login API endpoint\r\nexport default async function handler(req, res) {\r\n  if (req.method === 'POST') {\r\n    const { firstName, lastName, email, password } = req.body\r\n    const hashedPassword = bcrypt.hashSync(password);\r\n    console.log(req.body)\r\n    // TODO: Query your database to validate user credentials\r\n    const findUser = await User.findOne({ email}).exec();\r\n    if( !findUser){\r\n      const user = new User({ name: firstName + ' ' + lastName, email: email, password: hashedPassword });\r\n      user.save(function(err) {\r\n        if (err) throw err;\r\n        console.log('User saved successfully!');\r\n        res.status(200).json({ message: 'Login successful' })\r\n      });\r\n          \r\n        \r\n    }\r\n    else{\r\n      console.log('invalid')\r\n      res.status(401).json({ message: 'Invalid' })\r\n      //return\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\kesip\\openbrewery\\pages\\register.tsx",["135","136"],"import React,{ useState } from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\n//import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { useRouter } from 'next/router';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Register() {\r\n  const router = useRouter();\r\n  const [firstName, setfirstNAme] = useState(\"\");\r\n  const [lastName, setlastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isValid, setIsValid] = useState(true);\r\n  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const data = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      password: password\r\n    };\r\n\r\n    const JSONdata = JSON.stringify(data)\r\n    const endpoint = '/api/register'\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    \r\n    const options = {\r\n      // The method is POST because we are sending data.\r\n      method: 'POST',\r\n      // Tell the server we're sending JSON.\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      // Body of the request is the JSON data we created above.\r\n      body: JSONdata,\r\n    }\r\n\r\n    // Send the form data to our forms API on Vercel and get a response.\r\n    const response = await fetch(endpoint, options)\r\n\r\n    // Get the response data from server as JSON.\r\n    // If server returns the name submitted, that means the form works.\r\n    const result = await response.json()\r\n    //alert(`Is this your full name: ${result.message}`)\r\n    if( `${result.message}` === `Invalid`){\r\n      setIsValid(false)\r\n    }else{\r\n      setIsValid(true)\r\n      router.push('/');\r\n    }\r\n  };\r\n  function handleChanged(event) {\r\n    const target = event.target;\r\n    //const fistname = target.name;\r\n    //const value = target.name === 'firstName' ? target.value : 'Invalid';\r\n    switch(target.name) {\r\n      case 'firstName':\r\n        setfirstNAme(target.value.toString())\r\n        break;\r\n      case 'lastName':\r\n        setlastName(target.value.toString())\r\n        break;\r\n      case 'password':\r\n        setPassword(target.value.toString())\r\n        break;\r\n      case 'email':\r\n        const newEmail = event.target.value;\r\n        setEmail(newEmail);\r\n        setIsValid(emailPattern.test(newEmail));\r\n        break;\r\n      // default:\r\n        // code block\r\n    }\r\n    //console.log('value',value)\r\n    // Update the state of the form based on the changed input\r\n    // this.setState({\r\n    //   [name]: value\r\n    // });\r\n  }\r\n  const handleEmailChange = (event) => {\r\n    const newEmail = event.target.value;\r\n    setEmail(newEmail);\r\n    setIsValid(emailPattern.test(newEmail));\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          \r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Register\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  value={firstName}\r\n                  autoFocus\r\n                  onChange={handleChanged}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  value={lastName}\r\n                  autoComplete=\"family-name\"\r\n                  onChange={handleChanged}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  type='email'\r\n                  value={email}\r\n                  //onChange={handleEmailChange}\r\n                  onChange={handleChanged}\r\n                  error={!isValid}\r\n                  helperText={!isValid ? 'Please enter a valid email address' : ''}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  autoComplete=\"new-password\"\r\n                  onChange={handleChanged}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n",{"ruleId":"137","severity":1,"message":"138","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":12},{"ruleId":"137","severity":1,"message":"141","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":13},{"ruleId":"137","severity":1,"message":"142","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":15},{"ruleId":"137","severity":1,"message":"143","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":14},{"ruleId":"137","severity":1,"message":"144","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":12},{"ruleId":"137","severity":1,"message":"145","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":17},{"ruleId":"137","severity":1,"message":"146","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":22},{"ruleId":"137","severity":1,"message":"147","line":10,"column":8,"nodeType":"139","messageId":"140","endLine":10,"endColumn":18},{"ruleId":"137","severity":1,"message":"148","line":11,"column":10,"nodeType":"139","messageId":"140","endLine":11,"endColumn":21},{"ruleId":"137","severity":1,"message":"149","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":21},{"ruleId":"137","severity":1,"message":"150","line":12,"column":23,"nodeType":"139","messageId":"140","endLine":12,"endColumn":34},{"ruleId":"137","severity":1,"message":"151","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":17},{"ruleId":"137","severity":1,"message":"152","line":13,"column":19,"nodeType":"139","messageId":"140","endLine":13,"endColumn":26},{"ruleId":"137","severity":1,"message":"153","line":13,"column":28,"nodeType":"139","messageId":"140","endLine":13,"endColumn":36},{"ruleId":"137","severity":1,"message":"154","line":13,"column":37,"nodeType":"139","messageId":"140","endLine":13,"endColumn":44},{"ruleId":"137","severity":1,"message":"155","line":14,"column":8,"nodeType":"139","messageId":"140","endLine":14,"endColumn":14},{"ruleId":"137","severity":1,"message":"156","line":15,"column":17,"nodeType":"139","messageId":"140","endLine":15,"endColumn":25},{"ruleId":"137","severity":1,"message":"157","line":15,"column":27,"nodeType":"139","messageId":"140","endLine":15,"endColumn":36},{"ruleId":"137","severity":1,"message":"158","line":16,"column":8,"nodeType":"139","messageId":"140","endLine":16,"endColumn":11},{"ruleId":"137","severity":1,"message":"159","line":16,"column":10,"nodeType":"139","messageId":"140","endLine":16,"endColumn":16},{"ruleId":"137","severity":1,"message":"160","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":19},{"ruleId":"137","severity":1,"message":"161","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":13},{"ruleId":"137","severity":1,"message":"162","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":12},{"ruleId":"163","severity":1,"message":"164","line":1,"column":18,"nodeType":"139","messageId":"140","endLine":1,"endColumn":24},{"ruleId":"163","severity":1,"message":"165","line":24,"column":12,"nodeType":"139","messageId":"140","endLine":24,"endColumn":17},{"ruleId":"163","severity":1,"message":"166","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"167","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":16,"column":13,"nodeType":"170","endLine":16,"endColumn":88},{"ruleId":"137","severity":1,"message":"156","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":18},{"ruleId":"137","severity":1,"message":"157","line":2,"column":20,"nodeType":"139","messageId":"140","endLine":2,"endColumn":29},{"ruleId":"137","severity":1,"message":"171","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":11},{"ruleId":"137","severity":1,"message":"172","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"137","severity":1,"message":"173","line":95,"column":9,"nodeType":"139","messageId":"140","endLine":95,"endColumn":26},"@typescript-eslint/no-unused-vars","'Head' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'Inter' is defined but never used.","'styles' is defined but never used.","'Form' is defined but never used.","'Datatable' is defined but never used.","'LinearProgress' is defined but never used.","'Typography' is defined but never used.","'dataContext' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'srtBrew' is defined but never used.","'srtName' is defined but never used.","'srtState' is defined but never used.","'srtCity' is defined but never used.","'Navbar' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'App' is defined but never used.","'colors' is defined but never used.","'useRouter' is defined but never used.","'Login' is defined but never used.","'Link' is defined but never used.","no-unused-vars","'screen' is defined but never used.","'query' is assigned a value but never used.","'styled' is defined but never used.","'makeStyles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'jwt' is defined but never used.","'Avatar' is defined but never used.","'handleEmailChange' is assigned a value but never used."]